Organizations:
    - &OrdererOrg
        Name: OrdererMSP
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/gtbcsf.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

 
    - &BankOrg
        Name: BankMSP
        ID: BankMSP
        MSPDir: crypto-config/peerOrganizations/bank.gtbcsf.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('BankMSP.admin', 'BankMSP.peer', 'BankMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('BankMSP.admin', 'BankMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('BankMSP.admin')"
        AnchorPeers:
            - Host: peer0.bank.gtbcsf.com
              Port: 7051
 
    - &CourtOrg
        Name: CourtMSP
        ID: CourtMSP
        MSPDir: crypto-config/peerOrganizations/court.gtbcsf.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('CourtMSP.admin', 'CourtMSP.peer', 'CourtMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('CourtMSP.admin', 'CourtMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('CourtMSP.admin')"
        AnchorPeers:
            - Host: peer0.court.gtbcsf.com
              Port: 7051
 
    - &NotaryOfficeOrg
        Name: NotaryOfficeMSP
        ID: NotaryOfficeMSP
        MSPDir: crypto-config/peerOrganizations/notary.gtbcsf.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('NotaryOfficeMSP.admin', 'NotaryOfficeMSP.peer', 'NotaryOfficeMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('NotaryOfficeMSP.admin', 'NotaryOfficeMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('NotaryOfficeMSP.admin')"
        AnchorPeers:
            - Host: peer0.notary.gtbcsf.com
              Port: 7051
 
Orderer: &OrdererDefaults
    OrdererType: solo
    Addresses:
        - orderer.gtbcsf.com:7050
    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB
    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.4.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.4.3
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.4.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.4.3 or later.
        V1_4_3: true
        # V1.3 for Channel enables the new non-backwards compatible
        # features and fixes of fabric v1.3
        V1_3: false
        # V1.1 for Channel enables the new non-backwards compatible
        # features and fixes of fabric v1.1
        V1_1: false

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.4.2 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.4.2
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.4.2 orderer capabilities, ensure that all
        # orderers on a channel are at v1.4.2 or later.
        V1_4_2: true
        # V1.1 for Orderer enables the new non-backwards compatible
        # features and fixes of fabric v1.1
        V1_1: false

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.4.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.4.2.
        V1_4_2: true
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: false
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false

Application: &ApplicationDefaults
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ApplicationCapabilities

Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    EtcdRaftOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer.gtbcsf.com
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/gtbcsf.com/orderers/orderer.gtbcsf.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/gtbcsf.com/orderers/orderer.gtbcsf.com/tls/server.crt
                - Host: orderer2.gtbcsf.com
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/gtbcsf.com/orderers/orderer2.gtbcsf.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/gtbcsf.com/orderers/orderer2.gtbcsf.com/tls/server.crt
                - Host: orderer3.gtbcsf.com
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/gtbcsf.com/orderers/orderer3.gtbcsf.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/gtbcsf.com/orderers/orderer3.gtbcsf.com/tls/server.crt
            Addresses:
                - orderer.gtbcsf.com:7050
                - orderer2.gtbcsf.com:7050
                - orderer3.gtbcsf.com:7050
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
        Consortiums:
            SampleConsortium:
                Organizations:
                - *BankOrg
                - *NotaryOfficeOrg
                - *CourtOrg

    KafkaOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: kafka
            Kafka:
                Brokers:
                - kafka.gtbcsf.com:9092

            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
        Consortiums:
            SampleConsortium:
                Organizations:
                - *BankOrg
                - *NotaryOfficeOrg
                - *CourtOrg

    SoloOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *CourtOrg

    ThreeOrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *BankOrg
                - *NotaryOfficeOrg
                - *CourtOrg
            Capabilities:
                <<: *ApplicationCapabilities

    OneOrgChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *CourtOrg
            Capabilities:
                <<: *ApplicationCapabilities
